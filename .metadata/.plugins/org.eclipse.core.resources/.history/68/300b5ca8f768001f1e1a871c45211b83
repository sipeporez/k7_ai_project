package com.motorPM.service;

import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import org.springframework.stereotype.Service;

import com.motorPM.config.WebSocketConfig;
import com.motorPM.domain.DTO.AssetIDDTO;
import com.motorPM.domain.DTO.RealtimeDTO;
import com.motorPM.persistence.MemberRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class WebSocketService {

	private final MemberRepository mr;
    private final WebSocketConfig wc;

    private Timer timer;

    public void sendQueryResults(AssetIDDTO dto) {
    	
    	// 이전 Timer가 있다면 취소하고 null로 설정
        if (timer != null) {
            timer.cancel();
            timer.purge();
            timer = null;
        }

        // 새로운 Timer 생성
        timer = new Timer();

        // SQL 쿼리 결과를 저장
        List<Object[]> results = mr.realDataResult(dto.getAsset_id()); 

            private int index = 0;
            @Override
            @Scheduled(fixedRate = 10000)		// scheduler 시작하는 시간 기준으로 10초 간격으로 실행
            public void run() {
				if (index < results.size()) {
					Object[] result = results.get(index);
                		wc.sendPushMessage(
                				RealtimeDTO.builder()
                        		.asset_id(result[0].toString())
                        		.created_at((Integer) result[1])
                        		.spectrum_x((Float) result[2])
                        		.spectrum_y((Float) result[3])
                        		.spectrum_z((Float) result[4])
                        		.build());
                    index++;
                }
            }

        timer.scheduleAtFixedRate(task, 0, 1000); // Schedule task with 1-second interval
    }
}
