package com.motorPM.service;

import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import com.motorPM.config.WebSocketConfig;
import com.motorPM.domain.DTO.AssetIDDTO;
import com.motorPM.domain.DTO.RealtimeDTO;
import com.motorPM.persistence.MemberRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class WebSocketService {

	private final MemberRepository mr;
    private final WebSocketConfig wc;

    private Timer timer;

    public void sendQueryResults(AssetIDDTO dto) {
        // SQL 쿼리 결과를 저장
        List<Object[]> results = mr.realDataResult(dto.getAsset_id()); 
        private int index = 0;
        @Override
        @Scheduled(fixedRate = 1000)
			if (index < results.size()) {
				Object[] result = results.get(index);
            		wc.sendPushMessage(
            				RealtimeDTO.builder()
                    		.asset_id(result[0].toString())
                    		.created_at((Integer) result[1])
                    		.spectrum_x((Float) result[2])
                    		.spectrum_y((Float) result[3])
                    		.spectrum_z((Float) result[4])
                    		.build());
                index++;
            }
    }
