package com.motorPM.persistence;

import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.motorPM.domain.Member;

public interface MemberRepository extends JpaRepository<Member, Integer> {
	
	@Query("SELECT m FROM Member m WHERE m.userid = :userid")
    Optional<Member> findByUserid(@Param("userid") String userid);
	
	
	
	@Query(nativeQuery = true, 
			value = "SELECT :cols "
					+ "FROM ics_asset_sigdata "
					+ "WHERE asset_id = (SELECT asset_id FROM ics_asset_mst mst WHERE mst.asset_name = :asset_name) "
					+ "AND created_at BETWEEN :start_time AND :end_time;")
	List<Object[]> getSigDataSubquery(
			@Param(value = "cols") String cols,
			@Param(value = "asset_name") String asset_name,
			@Param(value = "start_time") int startTime,
			@Param(value = "end_time") int endTime);
	
	@Query(nativeQuery = true, 
			value = "SELECT :cols "
					+ "FROM ics_asset_sigdata sg, ics_asset_mst mst "
					+ "WHERE sg.asset_id = mst.asset_id "
					+ "AND mst.asset_name = :asset_name "
					+ "AND created_at BETWEEN :start_time AND :end_time;")
	List<Object[]> getSigDataJoin(
			@Param(value = "cols") String cols,
			@Param(value = "asset_name") String asset_name,
			@Param(value = "start_time") int startTime,
			@Param(value = "end_time") int endTime);
	
	
}
